name: Build APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Cache pip packages
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      # Cache Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $HOME/android-sdk
          key: android-sdk-${{ runner.os }}-r30

      # Cache Buildozer build dir (.buildozer)
      - name: Cache Buildozer
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-${{ runner.os }}-

      # Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git zip unzip openjdk-11-jdk python3-pip \
            python3-setuptools python3-wheel python3-virtualenv \
            pkg-config autoconf automake libtool zlib1g-dev \
            libncurses5-dev libstdc++6 libffi-dev libssl-dev curl

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install cython buildozer

      # Cài Android SDK + build-tools (fix sdkmanager path)
      - name: Install Android SDK Build-Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -fo sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          mkdir -p latest
          unzip -q sdk-tools.zip -d latest
          rm sdk-tools.zip
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-30" "build-tools;30.0.3"

      # Copy SDK đã cài sang chỗ Buildozer dùng
      - name: Prepare Buildozer SDK
        run: |
          mkdir -p $HOME/.buildozer/android/platform/
          rm -rf $HOME/.buildozer/android/platform/android-sdk
          cp -r $HOME/android-sdk $HOME/.buildozer/android/platform/android-sdk

      - name: Build APK
        run: |
          export ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk
          export PATH=$ANDROIDSDK/platform-tools:$ANDROIDSDK/build-tools/30.0.3:$PATH
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: bin/*.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "App Release v1.0.${{ github.run_number }}"
          files: bin/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
